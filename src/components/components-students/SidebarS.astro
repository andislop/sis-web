---
// Sidebar.astro
import "../../style/sidebar.css";

// Obtenemos la ruta actual desde Astro
const currentPath: string = Astro.url.pathname;

// Definimos la interfaz y estructura del menú
interface MenuItem {
  label: string;
  icon: string;
  href: string;
  subitems?: MenuItem[];
}

const sidebarMenu: MenuItem[] = [
  {
    label: "Página Principal",
    icon: "bx bxs-home",
    href: "/Students-Control/Students-Control",
  },
  {
    label: "Notas",
    icon: "bx bxs-calculator",
    href: "/Students-Control/Notas",
  },
  
];

// Función simple para determinar si un enlace debe estar "activo"
function isActive(link: string): boolean {
  return currentPath === link;
}
---

<section class="bar-home-content">
  <div class="section-bar-area-content">
    <div class="section-bar-menu">
      <div class="btn-buttuon-agreagar">
      </div>

      <div class="list-bar">
        <ul>
          {
            /*
            Renderizamos los tres primeros elementos en la primera lista.
            Se aplica la clase "active" si el href coincide con currentPath o si
            alguno de sus subitems es activo.
          */
          }
          {
            sidebarMenu.slice(0, 3).map((item) => {
              const itemActive =
                isActive(item.href) ||
                (item.subitems &&
                  item.subitems.some((sub) => isActive(sub.href)));
              return (
                <li
                  class={
                    item.subitems
                      ? `list-item list-item__sub ${itemActive ? "active" : ""}`
                      : `list-item ${itemActive ? "active" : ""}`
                  }
                >
                  <a href={item.href}>
                    <i class={item.icon} />
                    <span>{item.label}</span>
                  </a>
                  {item.subitems && (
                    <ul class="sublist">
                      {item.subitems.map((sub) => (
                        <li
                          class={`sublist-item ${isActive(sub.href) ? "active" : ""}`}
                        >
                          <a href={sub.href} tabindex="0">
                            <i class={sub.icon} />
                            <span>{sub.label}</span>
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              );
            })
          }
        </ul>
        <ul>
          {
            /*
            Renderizamos los elementos restantes en la segunda lista.
          */
          }
          {
            sidebarMenu.slice(3).map((item) => {
              const itemActive =
                isActive(item.href) ||
                (item.subitems &&
                  item.subitems.some((sub) => isActive(sub.href)));
              return (
                <li
                  class={
                    item.subitems
                      ? `list-item list-item__sub ${itemActive ? "active" : ""}`
                      : `list-item ${itemActive ? "active" : ""}`
                  }
                >
                  <a href={item.href}>
                    <i class={item.icon} />
                    <span>{item.label}</span>
                  </a>
                  {item.subitems && (
                    <ul class="sublist">
                      {item.subitems.map((sub) => (
                        <li
                          class={`sublist-item ${isActive(sub.href) ? "active" : ""}`}
                        >
                          <a href={sub.href} tabindex="0">
                            <i class={sub.icon} />
                            <span>{sub.label}</span>
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
  </div>
  <button class="close-sidebar">
    Minimizar<i class="bx bx-left-arrow-circle"></i>
  </button>
</section>
